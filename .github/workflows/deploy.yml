name: build-and-deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js (with npm cache and public registry)
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          registry-url: "https://registry.npmjs.org/"

      - name: Show current npm registry (diagnostic)
        run: |
          echo "npm registry (before):"
          npm config get registry || true
          echo
          echo ".npmrc (if present):"
          if [ -f .npmrc ]; then sed -n '1,200p' .npmrc || true; else echo "<no .npmrc>"; fi

      - name: Ensure public npm registry (extra safety)
        run: |
          echo "Setting npm registry to public npmjs.org"
          npm config set registry https://registry.npmjs.org/
          # also set env var which some tools read
          echo "NPM_CONFIG_REGISTRY=https://registry.npmjs.org/" >> $GITHUB_ENV
          npm config get registry

      - name: Replace Verdaccio host in package-lock.json (CI-only, non-destructive)
        run: |
          # If package-lock.json contains internal Verdaccio tarball URLs, replace the host part
          # Make a backup copy just in case
          if [ -f package-lock.json ]; then
            cp package-lock.json package-lock.json.ci-backup
            echo "Scanning package-lock.json for verdaccio host..."
            if grep -q "verdaccio.verdaccio.svc.cluster.local" package-lock.json; then
              echo "Found verdaccio references â€” replacing host with registry.npmjs.org for CI install only."
              # Replace the host and port occurrences with registry.npmjs.org (https).
              # This replacement modifies only the CI copy (not committed).
              # Use perl to do a safe, whole-file replacement (handles multiline).
              perl -0777 -pe 's{https?://verdaccio\.verdaccio\.svc\.cluster\.local:4873}{https://registry.npmjs.org}g' -i package-lock.json
              echo "Replacement done. Showing a sample of replaced lines:"
              grep -n "registry.npmjs.org" package-lock.json | head -n 5 || true
            else
              echo "No verdaccio host found in package-lock.json; nothing to replace."
            fi
          else
            echo "No package-lock.json found."
          fi

      - name: Configure npm fetch retries & timeouts
        run: |
          npm config set fetch-retries 5
          npm config set fetch-retry-factor 2
          npm config set fetch-retry-mintimeout 20000
          npm config set fetch-retry-maxtimeout 120000
          npm config get fetch-retries
          npm config get fetch-retry-mintimeout

      - name: Install dependencies (with retries for transient DNS/network errors)
        env:
          # double ensure registry env is present for child processes
          NPM_CONFIG_REGISTRY: https://registry.npmjs.org/
        run: |
          set -e
          max_retries=3
          attempt=0
          until npm ci --registry=https://registry.npmjs.org/; do
            attempt=$((attempt + 1))
            echo "npm ci failed (attempt $attempt/$max_retries)."
            if [ "$attempt" -ge "$max_retries" ]; then
              echo "Reached max retries. Dumping some diagnostics and exiting with failure."
              echo "====== Diagnostics ======"
              echo "npm registry:"
              npm config get registry
              echo
              echo "Sample package-lock entries (top 50 lines):"
              head -n 50 package-lock.json || true
              echo "====== End diagnostics ======"
              exit 1
            fi
            echo "Waiting 5s before retrying..."
            sleep 5
          done

      - name: Build
        run: npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
